import streamlit as st
import pandas as pd
import altair as alt

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤ Dashboard
st.set_page_config(page_title="‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥", page_icon="üìä", layout="wide")

# ‚úÖ ‡πÄ‡∏ä‡πá‡∏Å query parameter ‡∏ß‡πà‡∏≤‡πÄ‡∏õ‡πá‡∏ô mode=view ‡∏´‡∏£‡∏∑‡∏≠‡πÑ‡∏°‡πà
query_params = st.query_params
mode = query_params.get("mode", [""])[0]  # ‡∏î‡∏∂‡∏á‡∏Ñ‡πà‡∏≤‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå mode

# ‚úÖ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡πÑ‡∏î‡πâ‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏ñ‡πâ‡∏≤‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î "view"
if mode != "view":
    uploaded_files = st.file_uploader("üìÇ ‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå CSV", type=["csv"], accept_multiple_files=True)

    if not uploaded_files:
        st.warning("üìå ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå CSV")
        st.stop()
else:
    uploaded_files = []  # ‡∏ñ‡πâ‡∏≤‡∏≠‡∏¢‡∏π‡πà‡πÉ‡∏ô‡πÇ‡∏´‡∏°‡∏î view ‡πÑ‡∏°‡πà‡πÉ‡∏´‡πâ‡∏°‡∏µ‡πÑ‡∏ü‡∏•‡πå‡πÉ‡∏´‡∏°‡πà

# ‚úÖ ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡πÄ‡∏Ñ‡∏¢‡∏≠‡∏±‡∏õ‡πÇ‡∏´‡∏•‡∏î
if uploaded_files:
    for file in uploaded_files:
        df = pd.read_csv(file)

        # ‚úÖ ‡∏•‡∏ö‡∏ä‡πà‡∏≠‡∏á‡∏ß‡πà‡∏≤‡∏á‡∏à‡∏≤‡∏Å‡∏ä‡∏∑‡πà‡∏≠‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå
        df.columns = df.columns.str.strip()

        if df.empty:
            st.error(f"‚ö†Ô∏è ‡πÑ‡∏ü‡∏•‡πå **{file.name}** ‡πÑ‡∏°‡πà‡∏°‡∏µ‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•!")
            continue

        columns = df.columns.tolist()

        # ‚úÖ ‡∏ã‡πà‡∏≠‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏∑‡∏≠‡∏Å X ‡πÅ‡∏•‡∏∞ Y ‡πÄ‡∏°‡∏∑‡πà‡∏≠‡πÄ‡∏õ‡πá‡∏ô‡πÇ‡∏´‡∏°‡∏î view
        if mode != "view":
            x_axis = st.selectbox(f"üìå ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏Å‡∏ô X ({file.name})", columns, key=f"x_{file.name}")
            y_axis = st.selectbox(f"üìå ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡πÅ‡∏Å‡∏ô Y ({file.name})", columns, key=f"y_{file.name}")
        else:
            x_axis, y_axis = columns[0], columns[1]  # ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤ X, Y ‡∏≠‡∏±‡∏ï‡πÇ‡∏ô‡∏°‡∏±‡∏ï‡∏¥

        # ‚úÖ ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ß‡πà‡∏≤ Y ‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç
        if not pd.api.types.is_numeric_dtype(df[y_axis]):
            st.error(f"‚ö†Ô∏è ‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå {y_axis} ‡∏ï‡πâ‡∏≠‡∏á‡πÄ‡∏õ‡πá‡∏ô‡∏ï‡∏±‡∏ß‡πÄ‡∏•‡∏Ç‡πÄ‡∏ó‡πà‡∏≤‡∏ô‡∏±‡πâ‡∏ô!")
            continue

        df = df.sort_values(by=y_axis, ascending=False)

        chart = alt.Chart(df).mark_bar().encode(
            x=alt.X(x_axis, type='nominal', sort=df[x_axis].tolist()),
            y=alt.Y(y_axis, type='quantitative')
        ).properties(title=f"‡∏Å‡∏£‡∏≤‡∏ü‡∏Ç‡∏≠‡∏á {file.name}", width=800, height=400)

        st.altair_chart(chart, use_container_width=True)

